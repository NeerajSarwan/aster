<text>
## Baseline Model Pipeline   

This is the baseline kernel (automatically generated by my bot: aster). In this kernel, an end to end classification pipeline is implemented.

### Contents 

1. Prepare Environment  
2. Preparation and Exploration   
&nbsp;&nbsp;&nbsp;&nbsp; 2.1 Dataset Snapshot and Summary    
&nbsp;&nbsp;&nbsp;&nbsp; 2.2 Target Variable Distribution    
&nbsp;&nbsp;&nbsp;&nbsp; 2.3 Missing Values    
&nbsp;&nbsp;&nbsp;&nbsp; 2.4 Variable Types
&nbsp;&nbsp;&nbsp;&nbsp; 2.5 Variable Correlations (Numerical Fields)
3. Preprocessing  
&nbsp;&nbsp;&nbsp;&nbsp; 3.1 Label Encoding    
&nbsp;&nbsp;&nbsp;&nbsp; 3.2 Missing Values Treatment     
&nbsp;&nbsp;&nbsp;&nbsp; 3.3 Feature Engineering (Text Fields) 
&nbsp;&nbsp;&nbsp;&nbsp; 3.4 Train Test Split    
4. Modelling   
&nbsp;&nbsp;&nbsp;&nbsp; 4.1 Logistic Regression  
&nbsp;&nbsp;&nbsp;&nbsp; 4.2 Random Forest  
&nbsp;&nbsp;&nbsp;&nbsp; 4.3 Extereme Gradient Boosting  
5. Feature Importance   
6. Simple Ensemble
7. Creating Submission  
</text>


<text>
## Step 1: Prepare Environment
Lets load the required libraries to be used
</text>

<code>
from sklearn.metrics import confusion_matrix, roc_auc_score, roc_curve, auc
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split, KFold
from sklearn.ensemble import RandomForestClassifier
from sklearn.linear_model import LogisticRegression
from sklearn.preprocessing import LabelEncoder

from collections import Counter
import matplotlib.pyplot as plt
import seaborn as sns 
import pandas as pd
import numpy as np 
import itertools
</code>